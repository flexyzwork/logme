services:
  nginx:
    build:
      context: ./apps/nginx
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./apps/nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./apps/nginx/nginx.conf.template.ssl:/etc/nginx/nginx.conf.template.ssl:ro
      - ./apps/nginx/entrypoint.sh:/entrypoint.sh:ro
      - /home/ubuntu/.acme.sh:/root/.acme.sh:rw
    networks:
      - app-network
    depends_on:
      - app-${ACTIVE}
    environment:
      - ACTIVE=${ACTIVE}
    env_file:
      - .env
    entrypoint: ['/bin/sh', '/entrypoint.sh']

  # postgres:
  #   image: postgres:16
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: saas_dev
  #   ports:
  #     - '5432:5432'
  #   volumes:
  #     - /var/lib/postgresql/data
  #   networks:
  #     - app_network

  app-green:
    # image: web
    build:
      dockerfile: apps/web/Dockerfile
      context: .
    restart: always
    ports:
      - '3000:3000'
    env_file:
      - apps/web/.env
    # volumes:
    #   - app_data:/app/data
    networks:
      - app_network

  # app-blue:
  #   image: kix.ocir.io/axunckhvyv1v/logme-app:blue
  #   restart: always
  #   ports:
  #     - '3002:3000'
  #   env_file:
  #     - ./apps/web/.env
  #   volumes:
  #     - app_data:/app/data
  #   networks:
  #     - app-network

# networks:
#   app-network:
#     driver: bridge

networks:
  app_network:
    external: true


# volumes:
#   app_data:
