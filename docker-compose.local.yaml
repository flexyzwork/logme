services:
  nginx:
    container_name: nginx
    build:
      context: ./apps/nginx
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./apps/nginx/nginx.conf.template:/etc/nginx/nginx.conf.template.ssl:ro
      - ./apps/nginx/entrypoint.sh:/entrypoint.sh:ro
    networks:
      - shared-network
    depends_on:
      - app-${ACTIVE:-green}
    environment:
      - ACTIVE=${ACTIVE:-green}
    env_file:
      - .env
    entrypoint: ['/bin/sh', '/entrypoint.sh']

  vector:
    container_name: vector
    image: timberio/vector:latest-debian
    restart: always
    volumes:
      - ./apps/nginx/vector.yaml:/etc/vector/vector.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./apps/nginx/.env.local
    networks:
      - shared-network

  worker:
    container_name: worker
    build:
      dockerfile: apps/worker/Dockerfile.local
      context: .
    restart: always
    environment:
      - DATABASE_URL="postgresql://postgres:postgres@postgres:5432/saas_dev"
      - REDIS_URL=redis://redis:6379
    env_file:
      - apps/worker/.env
    networks:
      - shared-network

  api:
    container_name: api
    build:
      dockerfile: apps/api/Dockerfile.local
      context: .
    restart: always
    environment:
      - DATABASE_URL="postgresql://postgres:postgres@postgres:5432/saas_dev"
      - REDIS_URL=redis://redis:6379
    env_file:
      - apps/api/.env
    ports:
      - '4000:4000'
    networks:
      - shared-network

  app-green:
    container_name: app-green
    # image: kix.ocir.io/axunckhvyv1v/logme-app:green
    build:
      dockerfile: apps/web/Dockerfile.local
      context: .
    restart: always
    ports:
      - '3000:3000'
    environment:
      - NEXT_PUBLIC_API_URL=http://api:4000
      - DATABASE_URL="postgresql://postgres:postgres@postgres:5432/saas_dev"
    env_file:
      - apps/web/.env.local
    networks:
      - shared-network

networks:
  shared-network:
    external: true
# docker network create shared-network
# p docker
# docker compose -f docker-compose.local.yaml up -d
